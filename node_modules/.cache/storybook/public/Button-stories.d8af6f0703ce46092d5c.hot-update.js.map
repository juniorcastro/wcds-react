{"version":3,"file":"Button-stories.d8af6f0703ce46092d5c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAlBA","sources":["webpack://@wcds/wcds-react/./src/components/Button.tsx"],"sourcesContent":["// import React from 'react';\n// import './button.css';\n\n// export interface ButtonProps extends\n//   React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n//   variant?: 'primary' | 'secondary' | 'danger'\n// }\n\n// export const Button: React.FC<ButtonProps> = ({ variant = 'primary', ...props }) => {\n//   const {children, style} = props;\n\n//   const _style: React.CSSProperties = style || {};\n//   var design_tokens = require('../../design_tokens/tokens.json');\n// //   console.log(design_tokens.core.blue[500].value);\n//     _style.backgroundColor = design_tokens.core.blue[500].value;\n\n// //   switch(variant) {\n// //     case 'primary':\n// //       _style.backgroundColor = \"#194fdb\";\n// //       _style.color = '#fff';\n// //       break;\n// //     case 'secondary':\n// //       _style.backgroundColor = \"#F8CB2E\";\n// //       _style.color = '#000';\n// //       break;\n// //     case 'danger':\n// //       _style.backgroundColor = \"#B22727\";\n// //       _style.color = '#fff';\n// //       break;\n// //   }\n\n//   return (\n//     // <button style={_style} {...props}>{children}</button>\n//     // <button className={'primary-button'} {...props}>{children}</button>\n//     // <button className={'primary-button'} style={_style}>{children}</button>\n//     <button className={'primary-button'}>{children}</button>\n//   )\n// }\nimport React from 'react';\nimport './button.css';\n\ninterface ButtonProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean;\n  /**\n   * What background color to use\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  primary = false,\n  size = 'medium',\n  backgroundColor,\n  label,\n  ...props\n}: ButtonProps) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};"],"names":[],"sourceRoot":""}